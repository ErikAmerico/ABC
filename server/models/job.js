const mongoose = require("mongoose");

const jobSchema = new mongoose.Schema({
  date: Date,
  startTime: String,
  estimate: String,
  // origin: {
  //   company: { type: mongoose.Schema.Types.ObjectId, ref: "Company" },
  //   contact: { type: mongoose.Schema.Types.ObjectId, ref: "Contact" },
  //   altContact: { type: mongoose.Schema.Types.ObjectId, ref: "Contact" },
  //   additional: String,
  // },
  // destination: {
  //   company: { type: mongoose.Schema.Types.ObjectId, ref: "Company" },
  //   contact: { type: mongoose.Schema.Types.ObjectId, ref: "Contact" },
  //   altContact: { type: mongoose.Schema.Types.ObjectId, ref: "Contact" },
  //   additional: String,
  // },
  origin: [String],
  destination: [String],
  account: [{ type: mongoose.Schema.Types.ObjectId, ref: "Company" }],
  serviceType: String,
  remarks: String,
  contact: [{ type: mongoose.Schema.Types.ObjectId, ref: "Contact" }],
  callContactUponArrival: Boolean,
  callContactWhenLeavingAbc: Boolean,
  callContactWhenClose: Boolean,
  noCrewCabs: Boolean,
  tailgate: Boolean,
  truck100: Boolean,
  openBack: Boolean,
  stairs: Boolean,
  toolTime: Boolean,
  materialSheet: Boolean,
  bostonCrateSheet: Boolean,
  parkingPermits: Boolean,
  directions: Boolean,
  crewSize: Number,
  trucks: [{ type: mongoose.Schema.Types.ObjectId, ref: "Truck" }],
  vans: [{ type: mongoose.Schema.Types.ObjectId, ref: "Van" }],
  supervisors: [{ type: mongoose.Schema.Types.ObjectId, ref: "User" }],
  drivers: [{ type: mongoose.Schema.Types.ObjectId, ref: "User" }],
  helpers: [{ type: mongoose.Schema.Types.ObjectId, ref: "User" }],
  techs: [{ type: mongoose.Schema.Types.ObjectId, ref: "User" }],
  // equipment: {
  //   type: mongoose.Schema.Types.ObjectId,
  //   ref: "Equipment",
  // },
  equipment: {
    dolly: Number,
    comp: Number,
    panel: Number,
    library: Number,
    bin: Number,
    techBin: Number,
    trashBin: Number,
    tool: String,
    makitaCount: Number,
    makita: [Number],
    ramp14: Number,
    ramp10: Number,
    ramp8: Number,
    ramp6: Number,
    platform: Number,
    steelPlate: Number,
    hoodLift: Number,
    safeJackCount: Number,
    safeJack: [String],
    palletJack: Number,
    skinnyJack: Number,
    jBar: Number,
    bigRed: Number,
    masonite4: Number,
    masonite8: Number,
    ductTape: Number,
    blueTape: Number,
    coroflex: String,
    carpetGuard: Boolean,
    broom: Boolean,
    allenSet: Boolean,
    bitBox: Boolean,
    socketSet: Boolean,
    foamAcknowledge: Boolean,
    foam1L: String,
    foam1S: String,
    foam2L: String,
    foam2S: String,
    white: String,
    carpetRiser: Number,
    rubberRiser: Number,
    other: String,
  },
  description: String,
  minInsurance: Boolean,
  selfInsurance: Boolean,
  frcInsurance: Boolean,
  cost: String,
  emailInvoice: String,
  billTo: String,
  holdForCrates: Boolean,
  salesMan: String,
  author: String,
  poNum: String,
  projectNum: String,
  references: String,
  groupBill: String,
  prePayment: String,
});

const Job = mongoose.model("Job", jobSchema);

module.exports = Job;
